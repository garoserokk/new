#include <iostream>
#include<queue>
using namespace std;
int cnt = 0;
int start, en;
queue<int>q;
int used[100001];
int bfs(int s) {

	q.push(s);
	while (1) {

		int size = q.size();
		for (int i = 0; i < size; i++) {
			int now = q.front();
			used[now] = 1;
			q.pop();

			if (now == en)return cnt;

			if ((used[now + 1] != 1) && (now+1)>=0 &&((now + 1) <= 100000)) {
				q.push(now + 1);
				used[now + 1] = 1;
			}
			if (used[now * 2] != 1 && now*2 >=0 &&((now * 2) <= 100000)) {
				q.push(now * 2);
				used[now * 2] = 1;
			}

			if (used[now - 1] != 1 && (now - 1) >= 0 && ((now - 1) <= 100000)) {
				q.push(now - 1);
				used[now - 1] = 1;
			}

			if (used[now/2] != 1 && (now/2) >= 0 && ((now/2) <= 100000)) {
				q.push(now/2);
				used[now/2] = 1;
			}

		}

		cnt++;




	}



}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie();
	cout.tie();


	cin >> start >> en;

	cout << bfs(start);



}
